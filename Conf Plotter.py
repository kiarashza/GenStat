import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
# Fixing random state for reproducibility
np.random.seed(17680801)
print(2*-2147483648-214748364)
def plot_plot(x, y, label, x_label=None, y_label=None, color=None, size = None, marker='o', xlim = None, ylim=None):
    plt.rcParams.update({'font.size': 18})
    if color== None:
        color = list(np.random.rand(1))*len(y)
    else:
        if len(color)==1:
            color = [color]*len(y)
    if xlim != None:
        plt.xlim(*xlim)
    if ylim != None:
         plt.ylim(*ylim)

    plt.plot(x, y, label=label, c=color, marker=marker)


def labeler(x_label, y_label, font=20, file_name="myFig", close=False):

    plt.legend()
    plt.xlabel(x_label,fontsize=font)
    plt.ylabel(y_label,fontsize=font)
    plt.savefig(file_name, bbox_inches="tight")
    # plt.show()
    if close:
        plt.close()


#==============================
# example
# MUTAG
# Mutag
#
Y_table = [[0.988481821678579,
0.456400662660599,
0.215032556653023,
0.310975500941277,
0.027954196929932,
0.122585755959153,
]
] #Genstat

Y_table.append([0.960681234712061,
0.896016869110627,
0.958971652388573,
0.702747046947479,
0.676666282117367,
0.392752155661583
])# #ideal

Y_table.append([1.040646546,
0.9165456, 0.92509498647676,
0.740938304364681,
0.556867828965187,
0.300357869267464,
])#BiGG
File_name = "Mutag"
# #-----------------------------------------------------------------------------------------
# Grid
# Y_table = [[1.37161330655217,
# 0.676225754246116,
# 0.127667187154293,
# 0.115035987645388,
# 0.300554928183556,
# 0.259114508985915
# ]
# ] #GenStat
#
# Y_table.append([1.07284265309616,
# 1.06973618268964,
# 1.06074251863209,
# 1.06455833613459,
# 1.02623963551596,
# 1.09257781840861
#
#
# ])# #ideal
#
# Y_table.append([ 1.02,1.0390975552809,1.0190975552809,1.0290975552809,1.0290975552809,1.0290975552809
# ])#BiGG
# File_name = "grid"
# # #-----------------------------------------------------------------------------------------
# # PTC
# Y_table = [[0.45149901881814,
# 0.001679491996765,
# 0.003769147396088,
# 0.010741150379181,
# 0.020549654960632,
# 0.001671361923218
#
# ]] #GenStat
#
# Y_table.append([0.563523122668266,
# 0.490137246251106,
# 0.647105655074119,
# 0.595333651453257,
# 0.378602573275566,
# 0.253302821516991
#
#
# ])# #ideal
#
# Y_table.append([0.68,0.69,0.696331242471933,
# 0.69675913695246,
# 0.180214485526085,
# .13,
#
# ])#BiGG
# File_name = "PTC"
#=============================================================================
# # IMDB Binary
# Y_table = [[0.054055542498827,
# 0.075870386511088,
# 0.10761863142252,
# 0.096226019412279,
# 0.058229487016797,
# 0.072694905102253,
#
# ]] #LDP
#
# Y_table.append([
# 0.076788702607155,
# 0.070442273467779,
# 0.030721336603165,
# 0.009211453609169,
# 0.006956015527248,
# 0.006677858345211
# ])# #ideal
#
# Y_table.append([
# ])#BiGG
#=============================================================================
# # OGBG
# Y_table = [[0.077356295287609,
# 0.066076644510031,
# 0.048929596692324,
# 0.055426366627216,
# 0.054477858543396,
# 0.066993203014135
# ]] #LDP
#
# Y_table.append([
# 0.67048167437315,
# 0.84494251832366,
# 0.885365796089172,
# 0.652485375851393,
# 0.569487407803535,
# 0.243090397119522,
#
# ])# #ideal
#
# Y_table.append([
# 0.804465465465,
# 0.813345,
# 0.811806728318334,
# 0.707735270261765,
# 0.581647920608521,
# 0.287873777747154,
#
# ])# #big
#
# File_name = "ogbg"
#---------------------------------------------------------
#=============================================================================
# # # tri-grid
# Y_table = [[1.35130344026256,
# 1.10696682683192,
# 1.34619485363364,
# 1.16025163065642,
# 0.124935972690582,
# 0.019999766349793,
#
# ]]
#
# Y_table.append([1.05862299318522,
# 1.05984060549629,
# 1.06979286670528,
# 1.04383101390135,
# 1.02901542045438,
# 0.960484786331654
#
#
# ])# #ideal
#
# Y_table.append([1.04114599274471,
# 1.02134401649237,
# 1.02230978533626,
# 1.02084871381521,
# 1.03325342163444,
# 1.072866307199
# ])# #big
#
# File_name = "tri-Grid"
# /----------------------------------------------------
# # Lobster
# Y_table = [[
# 0.695526040717959,
# 0.427540631592274,
# 0.358851433545351,
# 0.358851433545351,
# 0.299642123281956,
# 0.005208277702332
#
# ]] #GenStat
#
# Y_table.append([0.805947351455689,
# 0.885959315299988,
# 0.796991544961929,
# 0.979524198362839,
# 0.511434783041477,
# 0.473698383569717
#
# ])# #ideal
#
#
# Y_table.append([0.8846564564654,
#     0.89544434434343,
# 0.880779872834682,
# 0.710635641093674,#-
# 0.630631951093674,#-
# 0.520631999193674,


# ])#BiGG
# File_name = "lobster"
# /---------------------------------------------
X_table = [[0.1,0.5,1,2,3,4]]*len(Y_table)
x_label= "Privacy Budget \u03B5"
y_label= "MMD RBF"
legend=["GenStat","Perturbed Neighbour", "BiGG"]
# plot_plot(names,values,"label")

texts = ["DGLFRM", "DGLFRM_kernel","FC","Graphite", "MolGAN","GraphRNN", "GRAN"]
marker  = ['o', 'v', '^','p','D','h','H']
colors = ["cornflowerblue","black" , "silver", "pink", "springgreen", "coral", "lightblue"]
#===============================================================================================




for i, row in enumerate(range(len(Y_table))):
    plot_plot(X_table[i], Y_table[i], marker = marker[i], color=colors[i], label=legend[i],ylim=[0,1.1] )
    labeler(x_label,y_label,file_name=File_name)

print("wait")

